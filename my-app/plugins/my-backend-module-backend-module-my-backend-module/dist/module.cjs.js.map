{"version":3,"file":"module.cjs.js","sources":["../src/module.ts"],"sourcesContent":["// import {\n//   coreServices,\n//   createBackendModule,\n// } from '@backstage/backend-plugin-api';\n\n// export const myBackendModuleModuleMyBackendModule = createBackendModule({\n//   pluginId: 'my-backend-module',\n//   moduleId: 'my-backend-module',\n//   register(reg) {\n//     reg.registerInit({\n//       deps: { logger: coreServices.logger },\n//       async init({ logger }) {\n//         logger.info('Hello World!');\n//       },\n//     });\n//   },\n// });\n\nimport { oidcAuthenticator } from '@backstage/plugin-auth-backend-module-oidc-provider';\nimport {\n  authProvidersExtensionPoint,\n  createOAuthProviderFactory,\n} from '@backstage/plugin-auth-node';\nimport {\n  coreServices,\n  createBackendModule,\n} from '@backstage/backend-plugin-api';\nimport {\n  DEFAULT_NAMESPACE,\n  stringifyEntityRef,\n} from '@backstage/catalog-model';\n\nexport const myBackendModuleModuleMyBackendModule = createBackendModule({\n  pluginId: 'my-backend-module',\n  moduleId: 'my-backend-module',\n  register(reg) {\n    reg.registerInit({\n      deps: {\n        logger: coreServices.logger,\n        providers: authProvidersExtensionPoint,\n      },\n      async init({ logger, providers }) {\n        logger.info('Registering OIDC provider!');\n        providers.registerProvider({\n          providerId: 'sso-auth-provider',\n          factory: createOAuthProviderFactory({\n            authenticator: oidcAuthenticator,\n            async signInResolver(info, ctx) {\n              const userRef = stringifyEntityRef({\n                kind: 'User',\n                name: info.result.fullProfile.userinfo.sub,\n                namespace: DEFAULT_NAMESPACE,\n              });\n              return ctx.issueToken({\n                claims: {\n                  sub: userRef, // The user's own identity\n                  ent: [userRef], // A list of identities that the user claims ownership through\n                },\n              });\n            },\n          }),\n        });\n      },\n    });\n  },\n});\n"],"names":["createBackendModule","coreServices","authProvidersExtensionPoint","createOAuthProviderFactory","oidcAuthenticator","stringifyEntityRef","DEFAULT_NAMESPACE"],"mappings":";;;;;;;AAgCO,MAAM,uCAAuCA,oCAAoB,CAAA;AAAA,EACtE,QAAU,EAAA,mBAAA;AAAA,EACV,QAAU,EAAA,mBAAA;AAAA,EACV,SAAS,GAAK,EAAA;AACZ,IAAA,GAAA,CAAI,YAAa,CAAA;AAAA,MACf,IAAM,EAAA;AAAA,QACJ,QAAQC,6BAAa,CAAA,MAAA;AAAA,QACrB,SAAW,EAAAC;AAAA,OACb;AAAA,MACA,MAAM,IAAA,CAAK,EAAE,MAAA,EAAQ,WAAa,EAAA;AAChC,QAAA,MAAA,CAAO,KAAK,4BAA4B,CAAA;AACxC,QAAA,SAAA,CAAU,gBAAiB,CAAA;AAAA,UACzB,UAAY,EAAA,mBAAA;AAAA,UACZ,SAASC,yCAA2B,CAAA;AAAA,YAClC,aAAe,EAAAC,qDAAA;AAAA,YACf,MAAM,cAAe,CAAA,IAAA,EAAM,GAAK,EAAA;AAC9B,cAAA,MAAM,UAAUC,+BAAmB,CAAA;AAAA,gBACjC,IAAM,EAAA,MAAA;AAAA,gBACN,IAAM,EAAA,IAAA,CAAK,MAAO,CAAA,WAAA,CAAY,QAAS,CAAA,GAAA;AAAA,gBACvC,SAAW,EAAAC;AAAA,eACZ,CAAA;AACD,cAAA,OAAO,IAAI,UAAW,CAAA;AAAA,gBACpB,MAAQ,EAAA;AAAA,kBACN,GAAK,EAAA,OAAA;AAAA;AAAA,kBACL,GAAA,EAAK,CAAC,OAAO;AAAA;AAAA;AACf,eACD,CAAA;AAAA;AACH,WACD;AAAA,SACF,CAAA;AAAA;AACH,KACD,CAAA;AAAA;AAEL,CAAC;;;;"}